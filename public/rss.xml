<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>lhw&#39;s blog</title>
        <link>http://localhost:1313/</link>
        <description>lhw自己的网上小窝</description>
        <generator>Hugo 0.61.0 https://gohugo.io/</generator>
        
            <language>zh-CN</language>
        
        
            <managingEditor>liuhongwu2003@gmail.com (lhw)</managingEditor>
        
        
            <webMaster>liuhongwu2003@gmail.com (lhw)</webMaster>
        
        
            <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
        
        <lastBuildDate>Sat, 14 Dec 2019 01:21:22 +0800</lastBuildDate>
        
            <atom:link rel="self" type="application/rss+xml" href="http://localhost:1313/rss.xml" />
        
        
            <item>
                <title>[笔记]对顶堆</title>
                <link>http://localhost:1313/posts/oi/%E7%AC%94%E8%AE%B0%E5%AF%B9%E9%A1%B6%E5%A0%86/</link>
                <guid isPermaLink="true">http://localhost:1313/posts/oi/%E7%AC%94%E8%AE%B0%E5%AF%B9%E9%A1%B6%E5%A0%86/</guid>
                <pubDate>Fri, 13 Dec 2019 20:32:10 +0800</pubDate>
                
                    <author>liuhongwu2003@gmail.com (lhw)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description><![CDATA[

<h1 id="简介">简介</h1>

<p><del>对顶堆是一种可以 $O(\textrm{log}\,n)$ 在线维护第 k 大值的数据结构（大雾</del></p>

<p>对顶堆动态维护一段只能添加的序列，寻找其中的第 k 大值</p>

<h1 id="代吗实现">代吗实现</h1>

<p>只需要一个类啦</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cm">/*
</span><span class="cm"> * @Author: lhw
</span><span class="cm"> * @Date: 2019-11-27 19:34:44
</span><span class="cm"> * @LastEditTime: 2019-11-28 15:12:55
</span><span class="cm"> */</span>

<span class="k">class</span> <span class="nc">Double_Heap</span> <span class="p">{</span>
    <span class="n">priority_queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">minh</span><span class="p">;</span>  	<span class="c1">//存放最小的若干个数的大根堆
</span><span class="c1"></span>    <span class="n">priority_queue</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">,</span> <span class="n">greater</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="o">&gt;</span> <span class="n">maxh</span><span class="p">;</span>	<span class="c1">//存放最大的若干个数的小根堆
</span><span class="c1"></span>  
    <span class="c1">//需要的元素维持在minh的堆顶
</span><span class="c1"></span>
    <span class="kt">void</span> <span class="nf">insert</span><span class="p">(</span><span class="kt">int</span> <span class="n">n</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">minh</span><span class="p">.</span><span class="n">empty</span><span class="p">(</span><span class="p">)</span> <span class="o">&amp;</span><span class="o">&amp;</span> <span class="n">n</span> <span class="o">&gt;</span> <span class="n">maxh</span><span class="p">.</span><span class="n">top</span><span class="p">(</span><span class="p">)</span><span class="p">)</span> <span class="p">{</span>  <span class="c1">//若n比maxh最小的要大，则交换n与maxh.top()
</span><span class="c1"></span>            <span class="n">maxh</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="p">;</span>
            <span class="n">n</span> <span class="o">=</span> <span class="n">maxh</span><span class="p">.</span><span class="n">top</span><span class="p">(</span><span class="p">)</span><span class="p">;</span>
            <span class="n">maxh</span><span class="p">.</span><span class="n">pop</span><span class="p">(</span><span class="p">)</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">minh</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="p">;</span>  <span class="c1">//n插入小根堆
</span><span class="c1"></span>    <span class="p">}</span>

    <span class="kt">int</span> <span class="nf">find_kth</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>  	<span class="c1">//寻找第k大数
</span><span class="c1"></span>        <span class="k">while</span> <span class="p">(</span><span class="n">minh</span><span class="p">.</span><span class="n">size</span><span class="p">(</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>  	<span class="c1">//minh元素过多，插进maxh
</span><span class="c1"></span>            <span class="n">maxh</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">minh</span><span class="p">.</span><span class="n">top</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">;</span>
            <span class="n">minh</span><span class="p">.</span><span class="n">pop</span><span class="p">(</span><span class="p">)</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">minh</span><span class="p">.</span><span class="n">size</span><span class="p">(</span><span class="p">)</span> <span class="o">&lt;</span> <span class="n">k</span><span class="p">)</span> <span class="p">{</span>  	<span class="c1">//minh元素过少，从maxh插回来
</span><span class="c1"></span>            <span class="n">minh</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">maxh</span><span class="p">.</span><span class="n">top</span><span class="p">(</span><span class="p">)</span><span class="p">)</span><span class="p">;</span>
            <span class="n">maxh</span><span class="p">.</span><span class="n">pop</span><span class="p">(</span><span class="p">)</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">minh</span><span class="p">.</span><span class="n">top</span><span class="p">(</span><span class="p">)</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>
<p>同理也可以实现在线维护第 k 小</p>

<h1 id="例题">例题</h1>

<p><a href="https://www.luogu.org/problem/P1168" target="_blank">Luogu P1168 中位数</a></p>

<p><a href="https://www.luogu.org/problem/P3871" target="_blank">Luogu P3871 中位数(TJOI2010) </a></p>
]]></description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="http://localhost:1313/posts/">posts</category>
                            
                        
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/oi/">OI</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/%E5%AF%B9%E9%A1%B6%E5%A0%86/">对顶堆</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>线段树笔记</title>
                <link>http://localhost:1313/posts/oi/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%AC%94%E8%AE%B0/</link>
                <guid isPermaLink="true">http://localhost:1313/posts/oi/%E7%BA%BF%E6%AE%B5%E6%A0%91%E7%AC%94%E8%AE%B0/</guid>
                <pubDate>Fri, 13 Dec 2019 16:47:17 +0800</pubDate>
                
                    <author>liuhongwu2003@gmail.com (lhw)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description><![CDATA[

<h1 id="简介">简介</h1>
]]></description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="http://localhost:1313/posts/">posts</category>
                            
                        
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/oi/">OI</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/">线段树</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>我的软件清单</title>
                <link>http://localhost:1313/posts/tools/%E6%88%91%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%B8%85%E5%8D%95/</link>
                <guid isPermaLink="true">http://localhost:1313/posts/tools/%E6%88%91%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%B8%85%E5%8D%95/</guid>
                <pubDate>Thu, 12 Dec 2019 20:38:18 +0800</pubDate>
                
                    <author>liuhongwu2003@gmail.com (lhw)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description><![CDATA[

<h1 id="工具类">工具类</h1>

<h2 id="分享">分享</h2>

<h3 id="firefox-send">Firefox Send</h3>

<p>地址：<a href="https://send.firefox.com/" target="_blank">Firefox Send</a></p>

<p>很方便的文件分享工具</p>

<h2 id="查询资料">查询资料</h2>

<h3 id="tldr">tldr</h3>

<p>用于初步了解某个命令的用法</p>

<p>Github：<a href="https://github.com/isacikgoz/tldr" target="_blank">https://github.com/isacikgoz/tldr</a></p>

<p>AUR： 建议使用 c++ 重写的 tldr-cpp-client</p>

<h3 id="cppman">cppman</h3>

<p>本地版 C++ reference</p>

<p>Github：<a href="https://github.com/aitjcize/cppman" target="_blank">https://github.com/aitjcize/cppman</a></p>

<p>AUR：Out of Date</p>

<p>Archlinuxcn：cppman-git</p>

<h2 id="下载">下载</h2>

<h3 id="aria2">Aria2</h3>

<p>Aria2 是一款自由、跨平台命令行界面的下载管理器，该软件根据 GPLv2 许可证进行分发。支持的下载协议有：HTTP、HTTPS、FTP、Bittorrent 和 Metalink。</p>

<p>aria2 is a utility for downloading files. The supported protocols are HTTP(S), FTP, SFTP, BitTorrent, and Metalink. aria2 can download a file from multiple sources/protocols and tries to utilize your maximum download bandwidth. It supports downloading a file from HTTP(S)/FTP/SFTP and BitTorrent at the same time, while the data downloaded from HTTP(S)/FTP/SFTP is uploaded to the BitTorrent swarm. Using Metalink's chunk checksums, aria2 automatically validates chunks of data while downloading a file like BitTorrent.</p>

<p>需要配合WebUI食用（e.g. YAAW, AriaNG）</p>

<p>Github：<a href="https://github.com/aria2/aria2" target="_blank">https://github.com/aria2/aria2</a></p>

<p>AUR：有原始版本的 aria2，但编译参数限定了 16 线程的上限，建议安装去除限制的 aria2-fast ， 同时有打包好的AriaNG(ariang-allinone)和YAAW(yaaw-git)。</p>

<h2 id="others">Others</h2>

<h3 id="graphviz">Graphviz</h3>

<p>“所想即所得”的画图工具，由大名鼎鼎的贝尔实验室开发。简单的来讲就是一款使用dot脚本语言来进行绘图的工具。</p>

<p><a href="https://zh.wikipedia.org/wiki/DOT%E8%AF%AD%E8%A8%80" target="_blank">dot脚本语言</a></p>

<p>官网：<a href="https://www.graphviz.org/" target="_blank">https://www.graphviz.org/</a></p>

<p>Arch：在 extra 仓库里</p>

<h1 id="网站类">网站类</h1>

<h2 id="oi">OI</h2>

<h3 id="c-reference">C++ reference</h3>

<p>地址：<a href="https://zh.cppreference.com/" target="_blank">中文</a>    <a href="https://en.cppreference.com/" target="_blank">English</a></p>

<p>开着浏览器就随手查了</p>

<h3 id="graph-editor">Graph Editor</h3>

<p>地址：<a href="https://csacademy.com/app/graph_editor/" target="_blank">https://csacademy.com/app/graph_editor/</a></p>

<p>平时写博客的时候用来画图</p>

<h3 id="oi-wiki">OI Wiki</h3>

<p>地址：<a href="https://oi-wiki.org/" target="_blank">https://oi-wiki.org/</a></p>

<p>一个免费开放且持续更新的知识整合站点，大家可以在这里获取关于 编程竞赛 (competitive programming) 有趣又实用的知识</p>
]]></description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="http://localhost:1313/posts/">posts</category>
                            
                        
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/tools/">Tools</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/%E8%BD%AF%E4%BB%B6/">软件</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/aria2/">aria2</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/tldr/">tldr</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/cpp/">cpp</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/c-/">c&#43;&#43;</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/oi/">OI</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>RMQ笔记</title>
                <link>http://localhost:1313/posts/oi/rmq%E7%AC%94%E8%AE%B0/</link>
                <guid isPermaLink="true">http://localhost:1313/posts/oi/rmq%E7%AC%94%E8%AE%B0/</guid>
                <pubDate>Thu, 12 Dec 2019 18:45:58 +0800</pubDate>
                
                    <author>liuhongwu2003@gmail.com (lhw)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description><![CDATA[

<h3 id="简介">简介</h3>

<p>RMQ是区间最值询问（Range Maximum/Minimum Query）的缩写</p>

<h3 id="算法">算法</h3>

<p>*题设*：给定 $n$ 个数，有 $m$ 个询问，对于每个询问，你需要回答区间 $[x,y]$ 中的最大值</p>

<h4 id="朴素做法">朴素做法</h4>

<p>每次对区间 $[x,y]$ 扫描一遍，求出最值
时间复杂度为 $O(mn)$</p>

<h4 id="st表">ST表</h4>

<blockquote>
<p>时间复杂度
&gt; 预处理 $O(n\,log\,n)$
&gt; 单次询问 $O(1)$</p>

<p>空间复杂度
&gt; $O(n\,log\,n)$</p>
</blockquote>

<p><strong>不支持修改</strong></p>

<p>ST表的基本思想是倍增。
要降低时间复杂度，首先要分析朴素算法慢在哪里。显然，朴素算法每次要遍历区间中每个点，如果我们用区间取代点就能有效提升效率。
同时，区间最值允许区间重叠，所以我们使用倍增。
令 $f[i,j]$ 表示区间 $[i,i+2^j-1]$ 的最大值，那么有 $f[i,0]=a[i]$ .</p>

<p>无法直接查到的用两个互有重叠的区间覆盖该区间来查找，即 $max(f[l,x], f[r - 2^x+1,x])$ ，其中 $x=\log_2(r-l+1)$</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="c1">//下段代码用于当区间长度为r-l+1使用的对数
</span><span class="c1"></span><span class="n">logn</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">logn</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span><span class="o">=</span> <span class="n">maxn</span><span class="p">;</span> <span class="n">i</span><span class="o">+</span><span class="o">+</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">logn</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">logn</span><span class="p">[</span><span class="n">i</span> <span class="o">&gt;</span><span class="o">&gt;</span> <span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="c1">//预处理
</span><span class="c1"></span><span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span><span class="o">=</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">+</span><span class="o">+</span><span class="p">)</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">read</span><span class="p">(</span><span class="p">)</span><span class="p">;</span>
<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span><span class="o">=</span> <span class="n">logn</span><span class="p">[</span><span class="n">n</span><span class="p">]</span><span class="p">;</span> <span class="n">j</span><span class="o">+</span><span class="o">+</span><span class="p">)</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;</span><span class="o">&lt;</span> <span class="n">j</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&lt;</span><span class="o">=</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">+</span><span class="o">+</span><span class="p">)</span>
        <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span><span class="p">,</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span> <span class="o">+</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;</span><span class="o">&lt;</span> <span class="p">(</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span><span class="p">)</span><span class="p">]</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span><span class="p">)</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="c1">//单次询问
</span><span class="c1"></span><span class="kt">int</span> <span class="n">x</span><span class="o">=</span><span class="n">logn</span><span class="p">[</span><span class="n">r</span><span class="o">-</span><span class="n">l</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="p">;</span>
<span class="n">printf</span><span class="p">(</span><span class="sa"></span><span class="s">&#34;</span><span class="s">%d</span><span class="se">\n</span><span class="s">&#34;</span><span class="p">,</span><span class="n">max</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">l</span><span class="p">]</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="p">,</span> <span class="n">f</span><span class="p">[</span><span class="n">r</span> <span class="o">-</span> <span class="p">(</span><span class="mi">1</span><span class="o">&lt;</span><span class="o">&lt;</span><span class="n">x</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="p">[</span><span class="n">x</span><span class="p">]</span><span class="p">)</span><span class="p">)</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div>
<h4 id="线段树">线段树</h4>

<p>参见<a href="https://blog.lhwcrt.top/404.html" target="_blank">线段树笔记</a></p>
]]></description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="http://localhost:1313/posts/">posts</category>
                            
                        
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/oi/">OI</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/rmq/">RMQ</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/st%E8%A1%A8/">ST表</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/">线段树</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Hello World</title>
                <link>http://localhost:1313/posts/test/hello-world/</link>
                <guid isPermaLink="true">http://localhost:1313/posts/test/hello-world/</guid>
                <pubDate>Thu, 05 Dec 2019 17:29:51 +0800</pubDate>
                
                    <author>liuhongwu2003@gmail.com (lhw)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description><![CDATA[

<h1 id="test">test</h1>
]]></description>
                
                
                
                    
                    
                    
                        
                        
                        
                            
                                <category domain="http://localhost:1313/posts/">posts</category>
                            
                        
                    
                        
                        
                        
                    
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/oi/">OI</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/noip/">NOIP</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/%E4%BF%A1%E6%81%AF/">信息</category>
                                
                            
                                
                                
                                
                                    <category domain="http://localhost:1313/tags/foi/">FOI</category>
                                
                            
                        
                    
                
            </item>
        
    </channel>
</rss>